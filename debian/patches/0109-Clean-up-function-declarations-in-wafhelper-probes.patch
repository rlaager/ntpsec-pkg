From 87e23bfc65f10d8962e7a6de5ba77c0bf8173204 Mon Sep 17 00:00:00 2001
From: Matt Selsky <matthew.selsky@twosigma.com>
Date: Thu, 1 Dec 2016 10:11:32 -0500
Subject: [PATCH 109/268] Clean up function declarations in wafhelper probes

Fixes:
warning: function declaration isn't a prototype
---
 wafhelpers/check_multicast.py   | 2 +-
 wafhelpers/check_openssl.py     | 2 +-
 wafhelpers/check_pthread.py     | 2 +-
 wafhelpers/check_sizeof.py      | 4 ++--
 wafhelpers/check_sockaddr.py    | 2 +-
 wafhelpers/check_structfield.py | 2 +-
 wafhelpers/check_type.py        | 2 +-
 wafhelpers/check_vsprintfm.py   | 4 ++--
 wafhelpers/probes.py            | 4 ++--
 9 files changed, 12 insertions(+), 12 deletions(-)

diff --git a/wafhelpers/check_multicast.py b/wafhelpers/check_multicast.py
index 918306d..d0cb497 100644
--- a/wafhelpers/check_multicast.py
+++ b/wafhelpers/check_multicast.py
@@ -3,7 +3,7 @@ def check_multicast(ctx):
         ctx.check_cc(
                 fragment="""
 #include <netinet/in.h>
-int main() {
+int main(void) {
         struct ip_mreq ipmr;
         ipmr.imr_interface.s_addr = 0;
         return 0;
diff --git a/wafhelpers/check_openssl.py b/wafhelpers/check_openssl.py
index a032298..f2c4333 100644
--- a/wafhelpers/check_openssl.py
+++ b/wafhelpers/check_openssl.py
@@ -1,7 +1,7 @@
 # Versions older than 0.9.7d were deemed incompatible in NTP Classic.
 OPENSSL_FRAG = """
 %s
-int main () {
+int main(void) {
 #if OPENSSL_VERSION_NUMBER < 0x0090704fL
 #error OpenSSL is too old.
 #endif
diff --git a/wafhelpers/check_pthread.py b/wafhelpers/check_pthread.py
index 8507ddf..cc1d82b 100644
--- a/wafhelpers/check_pthread.py
+++ b/wafhelpers/check_pthread.py
@@ -2,7 +2,7 @@ from wafhelpers.tool import check_sanity
 
 PTHREAD_FRAG = """
 #include <pthread.h>
-int main() {
+int main(void) {
 	pthread_mutex_t mutex;
 	pthread_mutex_init(&mutex, NULL);
 	pthread_mutex_destroy(&mutex);
diff --git a/wafhelpers/check_sizeof.py b/wafhelpers/check_sizeof.py
index 572170f..42e1f18 100644
--- a/wafhelpers/check_sizeof.py
+++ b/wafhelpers/check_sizeof.py
@@ -4,7 +4,7 @@ from waflib import Errors
 SIZE_FRAG = """
 %s
 #include <stdio.h>
-int main () {
+int main(void) {
 	printf("%%lu", sizeof(%s));
 	return 0;
 }
@@ -38,7 +38,7 @@ def check_sizeof_host(ctx, header, sizeof, mandatory=True):
 SIZE_FRAG_CROSS = """
 %s
 #include <sys/stat.h>
-int main () {
+int main(void) {
   static int test_array [1 - 2 * !(((long int) (sizeof (%s))) <= %d)];
   test_array [0] = 0;
   return test_array[0];
diff --git a/wafhelpers/check_sockaddr.py b/wafhelpers/check_sockaddr.py
index 1177109..bce690c 100644
--- a/wafhelpers/check_sockaddr.py
+++ b/wafhelpers/check_sockaddr.py
@@ -10,7 +10,7 @@ struct sockaddr_storage n;
 SA_LEN_FRAG = """
 #include <sys/types.h>
 #include <sys/socket.h>
-int main () {
+int main(void) {
   extern struct sockaddr *ps;
   return ps->sa_len;
 }
diff --git a/wafhelpers/check_structfield.py b/wafhelpers/check_structfield.py
index 05a064d..68a9e45 100644
--- a/wafhelpers/check_structfield.py
+++ b/wafhelpers/check_structfield.py
@@ -4,7 +4,7 @@ TYPE_FRAG = """
 #include <stdint.h>
 #include <sys/types.h>
 %s
-int main () {
+int main(void) {
         struct %s x;
         if (sizeof (x.%s))
                 return 0;
diff --git a/wafhelpers/check_type.py b/wafhelpers/check_type.py
index 10062b1..caffb5c 100644
--- a/wafhelpers/check_type.py
+++ b/wafhelpers/check_type.py
@@ -1,7 +1,7 @@
 from waflib.Configure import conf
 
 TYPE_FRAG = """
-int main () {
+int main(void) {
         if (sizeof (%s))
                 return 0;
         return 0;
diff --git a/wafhelpers/check_vsprintfm.py b/wafhelpers/check_vsprintfm.py
index e5dda76..47de788 100644
--- a/wafhelpers/check_vsprintfm.py
+++ b/wafhelpers/check_vsprintfm.py
@@ -19,7 +19,7 @@ int call_vsnprintf(char *dst, size_t sz, const char *fmt,...)
         return rc;
 }
 
-int main()
+int main(void)
 {
         char    sbuf[512];
         char    pbuf[512];
@@ -38,7 +38,7 @@ def check_vsprintfm(ctx):
         ctx.check_cc(
                 fragment='''
 #include <features.h>
-int main()
+int main(void)
 {
 #ifndef __GLIBC__
 # error __GLIBC__ is not defined
diff --git a/wafhelpers/probes.py b/wafhelpers/probes.py
index 893162f..cb6cfbc 100644
--- a/wafhelpers/probes.py
+++ b/wafhelpers/probes.py
@@ -8,7 +8,7 @@ def probe_header_with_prerequisites(ctx, header, prerequisites, use=None):
         src = ""
         for hdr in prerequisites + [header]:
                 src += "#include <%s>\n" % hdr
-        src += "int main() { return 0; }\n"
+        src += "int main(void) { return 0; }\n"
         have_name = "HAVE_%s" % header.replace(".", "_").replace("/", "_").upper()
         ctx.check_cc(
                 fragment=src,
@@ -24,7 +24,7 @@ def probe_function_with_prerequisites(ctx, function, prerequisites, use=None):
         src = ""
         for hdr in prerequisites:
                 src += "#include <%s>\n" % hdr
-        src += """int main() {
+        src += """int main(void) {
         void *p = (void*)(%s);
         return (int)p;
 }
-- 
2.7.4

