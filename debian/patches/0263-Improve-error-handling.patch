From 573ca5f7e4b68851e9b17b3e54a0bfabb7018284 Mon Sep 17 00:00:00 2001
From: "Eric S. Raymond" <esr@thyrsus.com>
Date: Sat, 10 Dec 2016 12:55:41 -0500
Subject: [PATCH 263/268] Improve error handling.

---
 ntpclients/ntpdig | 4 ++--
 ntpclients/ntpmon | 2 +-
 pylib/packet.py   | 4 ++++
 3 files changed, 7 insertions(+), 3 deletions(-)

diff --git a/ntpclients/ntpdig b/ntpclients/ntpdig
index 84b0f9a..2fac8fc 100755
--- a/ntpclients/ntpdig
+++ b/ntpclients/ntpdig
@@ -360,7 +360,7 @@ if __name__ == '__main__':
             try:
                 returned += queryhost(server=server, concurrent=True, timeout=timeout)
             except ntp.packet.SyncException as e:
-                log(e.message)
+                log(str(e))
                 continue
             if len(returned) >= samples:
                 break
@@ -368,7 +368,7 @@ if __name__ == '__main__':
             try:
                 returned += queryhost(server=server, concurrent=False, timeout=timeout)
             except ntp.packet.SyncException as e:
-                log(e.message)
+                log(str(e))
                 continue
             if len(returned) >= samples:
                 break
diff --git a/ntpclients/ntpmon b/ntpclients/ntpmon
index d1fd1d9..3494cfa 100755
--- a/ntpclients/ntpmon
+++ b/ntpclients/ntpmon
@@ -156,7 +156,7 @@ if __name__ == '__main__':
                 time.sleep(min(hpolls) / 2)
     except KeyboardInterrupt:
         print("")
-    except Fatal as e:
+    except (Fatal, ntp.packet.ControlException) as e:
         print(e)
     except IOError:
         print("Bailing out...")
diff --git a/pylib/packet.py b/pylib/packet.py
index 27eed6f..6338296 100644
--- a/pylib/packet.py
+++ b/pylib/packet.py
@@ -352,6 +352,8 @@ class SyncException(BaseException):
     def __init__(self, message, errorcode=0):
         self.message = message
         self.errorcode = errorcode
+    def __str__(self):
+        return self.message
 
 class SyncPacket(Packet):
     "Mode 1-5 time-synchronization packet, including SNTP."
@@ -688,6 +690,8 @@ class ControlException(BaseException):
     def __init__(self, message, errorcode=0):
         self.message = message
         self.errorcode = errorcode
+    def __str__(self):
+        return self.message
 
 class ControlSession:
     "A session to a host"
-- 
2.7.4

