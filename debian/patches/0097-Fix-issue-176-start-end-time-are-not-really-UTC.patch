From c87b635688ec8d0b6ff0cf2dbdad9d4893bfd987 Mon Sep 17 00:00:00 2001
From: "Gary E. Miller" <gem@rellim.com>
Date: Thu, 1 Dec 2016 18:33:17 -0800
Subject: [PATCH 097/268] Fix issue #176, start/end time are not really UTC.

Issue #176:
"ntpviz generated index.html Start Time and End Time -- are not really
UTC though labeled as such."
---
 ntpstats/ntpviz    | 4 ++--
 pylib/statfiles.py | 7 +++++--
 2 files changed, 7 insertions(+), 4 deletions(-)

diff --git a/ntpstats/ntpviz b/ntpstats/ntpviz
index 519a86e..6dc2ad8 100755
--- a/ntpstats/ntpviz
+++ b/ntpstats/ntpviz
@@ -1505,9 +1505,9 @@ dd {
 
     # Ugh.  Not clear what to do in the multiplot case
     if len(statlist) == 1:
-        start_time = datetime.datetime.fromtimestamp( stats.starttime
+        start_time = datetime.datetime.utcfromtimestamp( stats.starttime
                          ).strftime('%c')
-        end_time = datetime.datetime.fromtimestamp( stats.endtime
+        end_time = datetime.datetime.utcfromtimestamp( stats.endtime
                          ).strftime('%c')
 
         index_header += '<b>Start Time:</b> %s UTC<br>\n' \
diff --git a/pylib/statfiles.py b/pylib/statfiles.py
index af91ce2..865385c 100644
--- a/pylib/statfiles.py
+++ b/pylib/statfiles.py
@@ -202,11 +202,14 @@ class NTPStats:
         return key      # Someday, be smarter than this.
 
 def iso_to_posix(s):
-    "Accept timestamps in ISO8661 format or numeric POSIX time."
+    "Accept timestamps in ISO8661 format or numeric POSIX time. UTC only."
     if s.isdigit():
         return int(s)
     else:
-        return time.mktime(time.strptime(s, "%Y-%m-%dT%H:%M:%S"))
+        t = time.strptime(s, "%Y-%m-%dT%H:%M:%S")
+        t.m_isdst = 0
+        # don't use time.mktime() as taht is local tz
+        return  calendar.timegm(t)
 
 def posix_to_iso(t):
     "ISO8601 string from Unix time."
-- 
2.7.4

