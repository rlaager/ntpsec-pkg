From b04bfa94b87173329e1b6de67a1c0aadffd63fde Mon Sep 17 00:00:00 2001
From: "Eric S. Raymond" <esr@thyrsus.com>
Date: Sat, 10 Dec 2016 14:54:06 -0500
Subject: [PATCH 266/268] Renove more remnants of multicast support.

---
 ntpd/ntp.conf-man.txt |  5 +----
 ntpd/ntp_io.c         | 18 +++++++-----------
 ntpd/ntp_proto.c      |  5 -----
 3 files changed, 8 insertions(+), 20 deletions(-)

diff --git a/ntpd/ntp.conf-man.txt b/ntpd/ntp.conf-man.txt
index af9f637..1600110 100644
--- a/ntpd/ntp.conf-man.txt
+++ b/ntpd/ntp.conf-man.txt
@@ -57,10 +57,7 @@ variables that control various related operations.
 The various modes are determined by the command keyword and the type
 of the required IP address. Addresses are classed by type as (s) a
 remote server or peer (IPv4 class A, B and C), (b) the broadcast
-address of a local interface, or (m) a multicast address (IPv4 class
-D). For type m addresses the IANA has assigned the multicast group
-address IPv4 224.0.1.1 and IPv6 ff05::101 (site local) exclusively to
-NTP, but other nonconflicting addresses can be used.
+address of a local interface.
 
 Note that only those options applicable to each command are listed
 below. Use of options not listed may not be caught as an error, but
diff --git a/ntpd/ntp_io.c b/ntpd/ntp_io.c
index d4ec69b..7b8c192 100644
--- a/ntpd/ntp_io.c
+++ b/ntpd/ntp_io.c
@@ -352,17 +352,13 @@ collect_timing(struct recvbuf *rb, const char *tag, int count, l_fp *dts)
  *
  * special issues:
  *
- *   - mapping of multicast addresses to the interface affected is not always
- *     one to one - especially on hosts with multiple interfaces
- *     the code here currently allocates a separate interface entry for those
- *     multicast addresses
- *     iff it is able to bind to a *new* socket with the multicast address (flags |= MCASTIF)
- *     in case of failure the multicast address is bound to an existing interface.
- *   - on some systems it is perfectly legal to assign the same address to
- *     multiple interfaces. Therefore this code does not keep a list of interfaces
- *     but a list of interfaces that represent a unique address as determined by the kernel
- *     by the procedure in findlocalinterface. Thus it is perfectly legal to see only
- *     one representative of a group of real interfaces if they share the same address.
+ *   - on some systems it is perfectly legal to assign the same
+ *     address to multiple interfaces. Therefore this code does not
+ *     keep a list of interfaces but a list of interfaces that
+ *     represent a unique address as determined by the kernel by the
+ *     procedure in findlocalinterface. Thus it is perfectly legal to
+ *     see only one representative of a group of real interfaces if
+ *     they share the same address.
  *
  * Frank Kardel 20050910
  */
diff --git a/ntpd/ntp_proto.c b/ntpd/ntp_proto.c
index adeba9f..87e6d7a 100644
--- a/ntpd/ntp_proto.c
+++ b/ntpd/ntp_proto.c
@@ -2239,13 +2239,8 @@ fast_xmit(
 	 * the system minimum poll (ntp_minpoll). This is for KoD rate
 	 * control and not strictly specification compliant, but doesn't
 	 * break anything.
-	 *
-	 * If the gazinta was from a multicast address, the gazoutta
-	 * must go out another way.
 	 */
 	rpkt = &rbufp->recv_pkt;
-	if (rbufp->dstadr->flags & INT_MCASTOPEN)
-		rbufp->dstadr = findinterface(&rbufp->recv_srcadr);
 
 	/*
 	 * If this is a kiss-o'-death (KoD) packet, show leap
-- 
2.7.4

