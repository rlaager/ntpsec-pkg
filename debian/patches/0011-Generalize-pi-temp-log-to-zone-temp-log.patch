From 5a2161e6dc57074d464482f3fc1b2326ee7c88ac Mon Sep 17 00:00:00 2001
From: Richard Laager <rlaager@wiktel.com>
Date: Sat, 10 Dec 2016 23:05:34 -0600
Subject: [PATCH] Generalize pi-temp-log to zone-temp-log

---
 contrib/README        |  9 +++++----
 contrib/pi-temp-log   | 48 ------------------------------------------------
 contrib/zone-temp-log | 45 +++++++++++++++++++++++++++++++++++++++++++++
 3 files changed, 50 insertions(+), 52 deletions(-)
 delete mode 100755 contrib/pi-temp-log
 create mode 100755 contrib/zone-temp-log

diff --git a/contrib/README b/contrib/README
index 678a608..913e1fa 100644
--- a/contrib/README
+++ b/contrib/README
@@ -9,10 +9,6 @@ by 'ntpviz --local-temps'
 gps-log is a tool to log gpsd data and write the data to stdout.  Useful
 to create a log that can be used by 'ntpviz --local-gps'
 
-pi-temp-log for the Raspberry Pi.  It is a tool to read a magic /sys file
-to get the CPU temperature and write the temperatures to stdout.  Useful
-to create a log that can be used by 'ntpviz --local-temps'
-
 smartctl-temp-log for hard drives.  It is a tool to read a hard drive's
 SMART data to get the disk temperature and write the temperature
 to stdout.  Useful to create a log that can be used by 'ntpviz
@@ -22,3 +18,8 @@ temper-temp-log for TEMPer USB thermometer.  Useful for logging room
 temperature.  This reads the thermometer using the temper-python command
 line utility and writes the temperatures to stdout.  Useful to create a
 log that can be used by 'ntpviz --local-temps'
+
+zone-temp-log reads /sys/class/thermal/thermal_zone*/temp to find the CPU
+temperature.  Writes all temperatures found to stdout on one line, preceded by
+the unix UTC time in seconds.  This is useful on the Raspberry Pi, among many
+other systems.
diff --git a/contrib/pi-temp-log b/contrib/pi-temp-log
deleted file mode 100755
index b9dfd6c..0000000
--- a/contrib/pi-temp-log
+++ /dev/null
@@ -1,48 +0,0 @@
-#!/usr/bin/env python
-# coding: utf-8
-"""\
-Usage: pi-temper-log
-
-Reads /sys/class/thermal/thermal_zone0/temp to find the CPU temperature
-on a Raspberry Pi.  Writes all temperatures found to stdout on one line,
-preceded by the unix UTC time in seconds.
-
-
-Sample log:
-
-1471582083 PI 56.92
-1471582084 PI 57.458
-1471582085 PI 56.92
-1471582086 PI 56.92
-
-
-Field 1: unix UTC time in seconds
-Field 2: Loug source (PI)
-Field 3: CPU Temperature
-
-Sample crontab usage:
-
-# take and log cpu temp every 5 mins
-*/5 * * * * /usr/local/sbin/pi-temp-log >> /var/log/ntpstats/temps
-
-This ONLY works on a Raspberry Pi.  Maybe not all of them.  The way
-to read your system temperatures will be hardware specific.
-
-"""
-
-from __future__ import print_function
-
-import time
-
-now = int(time.time())
-
-f = open( '/sys/class/thermal/thermal_zone0/temp', 'r')
-for line in f:
-    # just one line
-    temp = float(line)
-
-f.close()
-
-temp /= 1000
-
-print( str(now) + ' PI ' + str(temp))
diff --git a/contrib/zone-temp-log b/contrib/zone-temp-log
new file mode 100755
index 0000000..e3ff885
--- /dev/null
+++ b/contrib/zone-temp-log
@@ -0,0 +1,45 @@
+#!/usr/bin/env python
+# coding: utf-8
+"""\
+Usage: zone-temper-log
+
+Reads /sys/class/thermal/thermal_zone*/temp to find the CPU temperature.
+Writes all temperatures found to stdout on one line, preceded by the
+unix UTC time in seconds.
+
+
+Sample log:
+
+1471582083 ZONE0 56.92
+1471582084 ZONE0 57.458
+1471582085 ZONE0 56.92
+1471582086 ZONE0 56.92
+
+
+Field 1: unix UTC time in seconds
+Field 2: Log source (ZONE)
+Field 3: CPU Temperature
+
+Sample crontab usage:
+
+# take and log cpu temp every 5 mins
+*/5 * * * * /usr/local/sbin/zone-temp-log >> /var/log/ntpstats/temps
+"""
+
+from __future__ import print_function
+
+import time
+
+now = int(time.time())
+
+zone = 0
+while True:
+    try:
+        f = open('/sys/class/thermal/thermal_zone{0}/temp'.format(zone), 'r')
+    except:
+        break
+    for line in f:
+        temp = float(line) / 1000
+        print('{0} ZONE{1} {2}'.format(now, zone, temp))
+    f.close()
+    zone = zone + 1
-- 
2.7.4

