From e4526e3b5d4574cc4a70e725d78b88e3e29461b1 Mon Sep 17 00:00:00 2001
From: "Eric S. Raymond" <esr@thyrsus.com>
Date: Sun, 4 Dec 2016 10:24:15 -0500
Subject: [PATCH 168/268] Nuke all the logic around NTPSEC_RELEASE in the build
 recipe.

We have a simpler way to do things.
---
 ntpd/wscript            | 28 +++++++++-----------
 wafhelpers/configure.py |  5 +---
 wafhelpers/dist.py      | 70 -------------------------------------------------
 wafhelpers/waf.py       |  4 +--
 wscript                 | 15 -----------
 5 files changed, 15 insertions(+), 107 deletions(-)
 delete mode 100644 wafhelpers/dist.py

diff --git a/ntpd/wscript b/ntpd/wscript
index 671d88d..49ceb66 100644
--- a/ntpd/wscript
+++ b/ntpd/wscript
@@ -4,23 +4,21 @@ def build(ctx):
 	bldnode = ctx.bldnode.abspath()
 
 	if ctx.variant == "host":
+		bison_source = [
+			"ntp_parser.y"
+		]
 
-		if not ctx.env.NTPSEC_RELEASE:
-			bison_source = [
-				"ntp_parser.y"
+		ctx(
+			target		= "bison_obj",
+			features	= "c src_include bld_include libisc_include",
+			source		= bison_source,
+			includes    = [
+							"%s/ntpd/" % srcnode,
+							"%s/" % ctx.bldnode.parent.abspath()
 			]
+		)
 
-			ctx(
-				target		= "bison_obj",
-				features	= "c src_include bld_include libisc_include",
-				source		= bison_source,
-				includes    = [
-								"%s/ntpd/" % srcnode,
-								"%s/" % ctx.bldnode.parent.abspath()
-				]
-			)
-
-			ctx.add_group() # Generate Bison files first.
+		ctx.add_group() # Generate Bison files first.
 
 		keyword_gen_source = [
 			"keyword-gen.c",
@@ -111,7 +109,7 @@ def build(ctx):
 		"ntp_signd.c",
 		"ntp_timer.c",
 		"ntpd.c",
-		ctx.bldnode.parent.find_node("host/ntpd/ntp_parser.tab.c") if not ctx.env.NTPSEC_RELEASE else "ntp_parser.tab.c"
+		ctx.bldnode.parent.find_node("host/ntpd/ntp_parser.tab.c")
 	]
 
 	# XXX: This really sucks, we need to get rid of all these refclock
diff --git a/wafhelpers/configure.py b/wafhelpers/configure.py
index 622cd0d..3ed5021 100644
--- a/wafhelpers/configure.py
+++ b/wafhelpers/configure.py
@@ -16,7 +16,6 @@ def cmd_configure(ctx, config):
         from wafhelpers.util import parse_version
         parse_version(config)
 
-        ctx.env.NTPSEC_RELEASE = config["NTPSEC_RELEASE"]
         ctx.env.NTPSEC_VERSION_MAJOR = config["NTPSEC_VERSION_MAJOR"]
         ctx.env.NTPSEC_VERSION_MINOR = config["NTPSEC_VERSION_MINOR"]
         ctx.env.NTPSEC_VERSION_REV = config["NTPSEC_VERSION_REV"]
@@ -49,9 +48,7 @@ def cmd_configure(ctx, config):
         ctx.setenv('host', ctx.env.derive())
 
         ctx.load('compiler_c')
-
-        if not ctx.env.NTPSEC_RELEASE:
-                ctx.load('bison')
+        ctx.load('bison')
 
         for opt in opt_map:
                 ctx.env[opt] = opt_map[opt]
diff --git a/wafhelpers/dist.py b/wafhelpers/dist.py
deleted file mode 100644
index 94e23de..0000000
--- a/wafhelpers/dist.py
+++ /dev/null
@@ -1,70 +0,0 @@
-from __future__ import print_function
-
-from os import path
-from shutil import copyfile
-from os.path import exists
-import time
-from wafhelpers.util import parse_version
-
-def dist_cmd(ctx, config):
-		files_man = []
-
-		parse_version(config)
-
-		if not ctx.options.build_snapshot and not config["NTPSEC_RELEASE"]:
-			ctx.fatal('Please supply --build-snapshot or set config["NTPSEC_RELEASE"] = True')
-
-		if not config["NTPSEC_RELEASE"]:
-			ctx.fatal('config["NTPSEC_RELEASE"] must be set to True')
-
-		if exists("build/c4che/host_cache.py"):
-			from waflib.ConfigSet import ConfigSet
-			cset = ConfigSet()
-			cset.load("build/c4che/host_cache.py")
-		else:
-			ctx.fatal("Please run 'waf configure' first.")
-
-		rev = cset.NTPSEC_REVISION[:7]
-		timestamp = time.strftime("%Y-%m-%d_%H%M%S")
-
-		# XXX: Redo to not use globs.
-		bldnode = ctx.path.make_node(config["out"])
-		for section in [1, 5, 8]:
-			files_man += bldnode.ant_glob("**/*.%d" % section)
-
-		# Need a more reliable check.
-		if not files_man:
-			ctx.fatal("You must configure and build first with NTPSEC_RELEASE set to false")
-
-		for man in files_man:
-			src = man.abspath()
-			dst = src.replace("%s/main/" % bldnode.abspath(), "")
-			print("Copying %s -> %s" % (src, dst))
-			copyfile(src, dst)
-
-		files = [
-			("build/host/ntpd/ntp_parser.tab.c", "ntpd/ntp_parser.tab.c"),
-			("build/host/ntpd/ntp_parser.tab.h", "ntpd/ntp_parser.tab.h")
-		]
-
-		for src, dst in files:
-			if not path.exists(src):
-				ctx.fatal("%s doesn't exist please configure and build first.  NTPSEC_RELEASE must be set to False" % src)
-			print("Copying %s -> %s" % (src, dst))
-			copyfile(src, dst)
-
-		version = "%d.%d.%d" % (config["NTPSEC_VERSION_MAJOR"], \
-						config["NTPSEC_VERSION_MINOR"], \
-						config["NTPSEC_VERSION_REV"])
-
-		if ctx.options.build_snapshot:
-			ctx.base_name = "ntpsec-%s-%s-%s-snap" % (timestamp, version, rev)
-		else:
-			ctx.base_name = "ntpsec-%s" % version
-
-		if ctx.options.build_version_tag:
-			ctx.base_name = "%s-%s" % (ctx.base_name, ctx.options.build_version_tag)
-
-		if ctx.options.build_snapshot:
-			with open("VERSION", "w") as fp:
-				fp.write("%s %s %s\n" % (version, timestamp, rev))
diff --git a/wafhelpers/waf.py b/wafhelpers/waf.py
index a2d6951..2bdec10 100644
--- a/wafhelpers/waf.py
+++ b/wafhelpers/waf.py
@@ -66,9 +66,7 @@ def manpage(ctx, section, source):
 	if not manprefix.endswith("/"):
 		manprefix += "/"
 
-	if ctx.env.NTPSEC_RELEASE:
-		ctx.install_files(manprefix + "man%s/" % section, source.replace("-man.txt", ".%s" % section))
-		return
+        #ctx.install_files(manprefix + "man%s/" % section, source.replace("-man.txt", ".%s" % section))
 
 	if not ctx.env.ENABLE_DOC or ctx.env.DISABLE_MANPAGE:
 		return
diff --git a/wscript b/wscript
index 313d170..5930198 100644
--- a/wscript
+++ b/wscript
@@ -15,21 +15,10 @@ from wafhelpers.test import test_write_log, test_print_log
 from wafhelpers.options import options_cmd
 
 config = {
-        "NTPSEC_RELEASE": False,
         "out": out,
         "OPT_STORE": {}
 }
 
-# Release procedure:
-#   1. waf configure
-#   2. waf build
-#   3. Edit wscript and set NTPSEC_RELEASE to True
-#   4. waf dist
-
-# Snapshot procedure:
-#   Steps 1-3 as above.
-#   4. waf dist --build-snapshot
-
 def help(ctx):
     "Be helpful, give a usage"
     print('''
@@ -41,10 +30,6 @@ Usage: waf <command>
 
 ''')
 
-def dist(ctx):
-        from wafhelpers.dist import dist_cmd
-        dist_cmd(ctx, config)
-
 
 def options(ctx):
         options_cmd(ctx, config)
-- 
2.7.4

