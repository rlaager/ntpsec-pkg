From 475174afa9aff98b10606e18fd8d9f6651bd22e7 Mon Sep 17 00:00:00 2001
From: "Eric S. Raymond" <esr@thyrsus.com>
Date: Thu, 24 Nov 2016 12:11:35 -0500
Subject: [PATCH 006/268] Create a cxfreeze convenience production.

---
 devel/packaging.txt | 16 +++++++---------
 wscript             | 23 ++++++++++++++---------
 2 files changed, 21 insertions(+), 18 deletions(-)

diff --git a/devel/packaging.txt b/devel/packaging.txt
index 981ab0e..8077e21 100644
--- a/devel/packaging.txt
+++ b/devel/packaging.txt
@@ -33,19 +33,15 @@ pip install cx_Freeze
 You may find that you also need to install the package 'patchelf'.
 
 Change to the root directory of the NTPsec source distribution and
-run the following commands:
+run the following command:
 
 ```
-cxfreeze ntpq/ntpq
-cxfreeze ntpstats/ntpviz
-cxfreeze ntpsweep/ntpsweep
-cxfreeze ntptrace/ntptrace
-cxfreeze ntpkeygen/ntpkeygen
+waf cxfreeze
 ```
 
-The four executables (pyntpq, ntpviz, ntpsweep, ntptrace, and
-ntpkeygen) will now be in the directory named dist along with the
-other files required run.
+Binary executables corresponding to every Python script will now be in
+the directory named dist along with the other files required for them
+to run.
 
 You can copy the dist directory, and its contents, to a host that does
 not have Python installed and execute the programs there.
@@ -53,3 +49,5 @@ not have Python installed and execute the programs there.
 There appears to be no speed advantage, or disadvantage, to running the
 binaries created by cx_freeze.
 
+// end
+
diff --git a/wscript b/wscript
index f72375e..176850a 100644
--- a/wscript
+++ b/wscript
@@ -148,6 +148,15 @@ def linkmaker(ctx):
     if ctx.cmd in ('install', 'build'):
         os.system("ln -sf %s/libntp/ntpc.so %s/pylib/ntpc.so " % (bldnode, bldnode))
 
+python_scripts = [
+        "ntpq/ntpq",
+        "ntpstats/ntpviz",
+        "ntptrace/ntptrace",
+        "ntpwait/ntpwait",
+        "ntpsweep/ntpsweep",
+        "ntpkeygen/ntpkeygen",
+]
+
 def build(ctx):
 	ctx.load('waf', tooldir='wafhelpers/')
 	ctx.load('bison')
@@ -187,15 +196,7 @@ def build(ctx):
 	ctx.recurse("attic")
 	ctx.recurse("tests")
 
-	scripts = [
-		"ntpleapfetch/ntpleapfetch",
-		"ntpq/ntpq",
-		"ntpstats/ntpviz",
-		"ntptrace/ntptrace",
-		"ntpwait/ntpwait",
-		"ntpsweep/ntpsweep",
-		"ntpkeygen/ntpkeygen",
-	]
+        scripts = ["ntpleapfetch/ntpleapfetch"] + python_scripts
 
 	ctx(
 		features    = "subst",
@@ -252,6 +253,10 @@ def loccount(ctx):
     "Report the SLOC count of the source tree."
     ctx.exec_command("loccount -x=build .")
 
+def cxfreeze(ctx):
+    "Create standalone binaries from Python scripts."
+    ctx.exec_command("for prog in " + " ".join(python_scripts) + "; do cxfreeze $prog; done")
+
 # The following sets edit modes for GNU EMACS
 # Local Variables:
 # mode:python
-- 
2.7.4

