From d7135c8cd8acd662e36e4abee11ac5be404eae94 Mon Sep 17 00:00:00 2001
From: "Eric S. Raymond" <esr@thyrsus.com>
Date: Sat, 3 Dec 2016 14:00:15 -0500
Subject: [PATCH 161/268] Address GitLab issue #189: ntpq mrv traceback

---
 ntpq/ntpq | 10 +++++++---
 1 file changed, 7 insertions(+), 3 deletions(-)

diff --git a/ntpq/ntpq b/ntpq/ntpq
index 0c321d6..84d8ca4 100755
--- a/ntpq/ntpq
+++ b/ntpq/ntpq
@@ -412,8 +412,11 @@ usage: help [ command ]
             except:
                 self.warn("Invalid index literal.\n")
                 return -1
-            if idx not in range(1, len(self.peers)+1):
-                self.warn("No such index.\n")
+            if idx < 0 or idx >= 2**16-1:
+                self.warn("%d is not a valid association number.\n" % idx)
+                return -1
+            elif idx not in range(1, len(self.peers)+1):
+                self.warn("No such association as %d.\n" % idx)
                 return -1
             else:
                 return self.peers[idx - 1].associd
@@ -436,7 +439,7 @@ usage: help [ command ]
             return ()
         lo = self.__assoc_valid(tokens[0])
         hi = self.__assoc_valid(tokens[1])
-        if (lo >= 0 and hi >= 0 and hi < lo):
+        if lo < 0 or hi < 0 or hi < 0: 
             return ()
         return (lo, hi)
 
@@ -518,6 +521,7 @@ usage: help [ command ]
     def __dolist(self, varlist, associd, op, type, quiet=False):
         "List variables associated with a specified peer."
         try:
+            print("Qerying %d" % associd)
             variables = self.session.readvar(associd, varlist, op)
         except ntp.packet.ControlException as e:
             self.warn(e.message + "\n")
-- 
2.7.4

