From cefa17949c096afdb61ab07d37d16c471d6812ea Mon Sep 17 00:00:00 2001
From: Chris Mayo <aklhfex@gmail.com>
Date: Sat, 3 Dec 2016 14:34:55 +0000
Subject: [PATCH 146/268] docs: Remove section numbering

---
 docs/prefer.txt | 28 ++++++++++++++--------------
 docs/stats.txt  | 12 ++++++------
 docs/warp.txt   | 12 ++++++------
 3 files changed, 26 insertions(+), 26 deletions(-)

diff --git a/docs/prefer.txt b/docs/prefer.txt
index 8bbb40f..14829c4 100644
--- a/docs/prefer.txt
+++ b/docs/prefer.txt
@@ -15,18 +15,18 @@ include::includes/misc.txt[]
 
 == Table of Contents ==
 
-* link:#intro[1. Introduction and Overview]
-* link:#combine[2. Combine Algorithm]
-* link:#clockhop[3. Anti-Clockhop Algorithm]
-* link:#peer[4. Peer Classification]
-* link:#prefer[5. 5. The +prefer+ Peer]
-* link:#miti[6. Mitigation Rules]
-* link:#mins[7. The +minsane+ Option]
+* link:#intro[Introduction and Overview]
+* link:#combine[Combine Algorithm]
+* link:#clockhop[Anti-Clockhop Algorithm]
+* link:#peer[Peer Classification]
+* link:#prefer[The +prefer+ Peer]
+* link:#miti[Mitigation Rules]
+* link:#mins[The +minsane+ Option]
 
 '''''
 
 [[intro]]
-== 1. Introduction and Overview ==
+== Introduction and Overview ==
 
 This page summarizes the criteria for choosing from among the survivors
 of the clock cluster algorithm a set of contributors to the clock
@@ -69,7 +69,7 @@ directly, as described on the link:kern.html[A Kernel Model for
 Precision Timekeeping] page.
 
 [[combine]]
-== 2. Combine Algorithm ==
+== Combine Algorithm ==
 
 The clock combine algorithm uses the survivor list to produce a weighted
 average of both offset and jitter. Absent other considerations discussed
@@ -85,7 +85,7 @@ survivors at the smallest root distance and thus the smallest maximum
 error.
 
 [[clockhop]]
-== 3. Anti-Clockhop Algorithm ==
+== Anti-Clockhop Algorithm ==
 
 The anti-clockhop algorithm is intended for cases where multiple servers
 are available on a fast LAN with modern computers. Typical offset
@@ -116,7 +116,7 @@ operation continue in this way, the candidate peer will eventually
 become the system peer.
 
 [[peer]]
-== 4. Peer Classification ==
+== Peer Classification ==
 
 The behavior of the various algorithms and mitigation rules involved
 depends on how the various synchronization sources are classified. This
@@ -157,7 +157,7 @@ backup source, should all other sources fail, or as the primary source
 if the +prefer+ option is present.
 
 [[prefer]]
-== 5. The +prefer+ Peer ==
+== The +prefer+ Peer ==
 
 The mitigation rules are designed to provide an intelligent selection of
 the system peer from among the selectable sources of different types.
@@ -191,7 +191,7 @@ becomes a falseticker, the combined backup sources continue to
 discipline the system clock.
 
 [[miti]]
-== 6. Mitigation Rules ==
+== Mitigation Rules ==
 
 As the select algorithm scans the associations for selectable
 candidates, the modem driver and local driver are segregated for later,
@@ -243,7 +243,7 @@ If none of the above is the case, the data are disregarded and the
 system variables remain as they are.
 
 [[mins]]
-== 7. The +minsane+ Option ==
+== The +minsane+ Option ==
 
 The +minsane+ option of the link:miscopt.html#tos[+tos+] command, the
 +prefer+ option of the +server+ and +peer+ commands and the +flag+
diff --git a/docs/stats.txt b/docs/stats.txt
index 9fd7628..e64c2a8 100644
--- a/docs/stats.txt
+++ b/docs/stats.txt
@@ -7,14 +7,14 @@ include::includes/external.txt[]
 
 == Table of Contents ==
 
-* link:#intro[1. Introduction]
-* link:#budget[2. Statistics Summary]
-* link:#quality[3. Quality of Service]
+* link:#intro[Introduction]
+* link:#budget[Statistics Summary]
+* link:#quality[Quality of Service]
 
 '''''
 
 [[intro]]
-== 1. Introduction ==
+== Introduction ==
 
 This page describes several statistics provided in the NTP specification
 and reference implementation and how they determine the accuracy and
@@ -48,7 +48,7 @@ data inherited from the system peer. These data are available to
 application programs and dependent downstream clients.
 
 [[budget]]
-== 2. Statistics Summary ==
+== Statistics Summary ==
 
 Each NTP synchronization source is characterized by the offset θ and
 delay δ samples measured by the on-wire protocol, as described on the
@@ -122,7 +122,7 @@ eight survives, the resulting sample rate is twice the Nyquist rate at
 any time constant and poll interval.
 
 [[quality]]
-== 3. Quality of Service ==
+== Quality of Service ==
 
 This section discusses how an NTP client determines the system
 performance using a peer population including reference clocks and
diff --git a/docs/warp.txt b/docs/warp.txt
index 20366b4..d84984f 100644
--- a/docs/warp.txt
+++ b/docs/warp.txt
@@ -7,9 +7,9 @@ include::includes/external.txt[]
 
 == Table of Contents ==
 
-* link:#intro[1. Introduction and Overview]
-* link:#scale[2. NTP Timescale and Data Formats]
-* link:#arch[3. Architecture and Algorithms]
+* link:#intro[Introduction and Overview]
+* link:#scale[NTP Timescale and Data Formats]
+* link:#arch[Architecture and Algorithms]
 
 '''''
 
@@ -34,7 +34,7 @@ Research Project] web site.
 
 
 [[intro]]
-== 1. Introduction and Overview ==
+== Introduction and Overview ==
 
 NTP time synchronization services are widely available in the public
 Internet. The public NTP subnet currently includes several thousand
@@ -63,7 +63,7 @@ planning purposes is in the white paper
 Network Time Synchronization].
 
 [[scale]]
-== 2. NTP Timescale and Data Formats ==
+== NTP Timescale and Data Formats ==
 
 NTP clients and servers synchronize to the Coordinated Universal Time
 (UTC) timescale used by national laboratories and disseminated by radio,
@@ -115,7 +115,7 @@ half-era) of the correct time. Further discussion on this issue is in
 the white paper {millshome}time.html[NTP Timestamp Calculations].
 
 [[arch]]
-== 3. Architecture and Algorithms ==
+== Architecture and Algorithms ==
 
 image:pic/fig_3_1.gif[]
 
-- 
2.7.4

