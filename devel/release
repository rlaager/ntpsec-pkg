#!/bin/sh
# Cut an ntpsec release.  VERSION must contain the correct release number.
#
# Run with no arguments to dry-run this.

do="echo"
if [ "$1" = "go" ]
then
	do=""
fi

set -e	# Bail out if the tarball build fails

./make-tarball	# Build and test the tarball; bail out if that fails

V=`cat ../VERSION`
UV=`cat ../VERSION | tr '.' '_'`

K=477C7528	# Release manager's GPG key ID

# Tag the version
$do git tag -u ${K} -m "version ${V}" NTPsec_${UV}

# Commit those modifications to the repository.
$do git commit -Ssecurity@ntpsec.org -s -m "version ${V}"

# Push the repository upstream.
$do git push  
$do git push --tags

# Generate GPG detached signature of the release tarball.
$do gpg -u ${K} -a --output ntpsec-${V}.tar.gz.sum.asc --sign ntpsec-${V}.tar.gz.sum

# Generate sha256sum file for the release tarball.
$do shasum -a 256 -p ntpsec-${V}.tar.gz >ntpsec-${V}.tar.gz.sum

# GPG sign that sha256sum file.
$do gpg -u ${K} -a --output ntpsec-${V}.tar.gz.sum.asc ntpsec-${V}.tar.gz.sum
  
# Copy the release tarball, GPG detached signature of the release
# tarball, and the signed sha256sum file to the ftp artifact server.
$do scp ntpsec-${V}.tar* markatwood@service1.ntpsec.org:/usr/local/jail/ftp.ntpsec.org/data/ftp/pub/releases/

# end
